; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Node",
"class": "Enemy_Detection_Machine",
"language": "GDScript",
"path": "res://scenes/levelTest/Enemy Detection State Machine.gd"
}, {
"base": "Node",
"class": "Health_State_Machine",
"language": "GDScript",
"path": "res://scenes/levelTest/Health State Machine.gd"
}, {
"base": "Node",
"class": "Major_Event_Stat_Machine",
"language": "GDScript",
"path": "res://scenes/levelTest/Major Event State Machine.gd"
}, {
"base": "Node",
"class": "Minor_Event_Stat_Machine",
"language": "GDScript",
"path": "res://scenes/levelTest/Minor Event State Machine.gd"
} ]
_global_script_class_icons={
"Enemy_Detection_Machine": "",
"Health_State_Machine": "",
"Major_Event_Stat_Machine": "",
"Minor_Event_Stat_Machine": ""
}

[application]

config/name="DMCIVG"
config/description="CSUN Computer Science Senior Design Project (COMP 490-491) Fall 2020 - Spring 2021

About Our Game
DMCIVG stands for, \"Dynamic Music Composition in Video Games.\" The goal of our project is to create a game which composes music in real-time. The music in our game adapts to events and changes in the game's state to create a unique auditory experience on every playthrough.

Our project uses the audio processing software and visual programming language, Pure Data. The game was made using the Godot game engine."
run/main_scene="res://scenes/Main.tscn"
config/icon="res://icon.png"
config/macos_native_icon="res://icon.icns"
config/windows_native_icon="res://icon.ico"

[autoload]

JsonData="res://JSONData.gd"

[display]

window/size/width=480
window/size/height=270
window/stretch/mode="2d"
window/stretch/aspect="keep"

[input]

primary_attack={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"unicode":0,"echo":false,"script":null)
 ]
}
secondary_attack={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":90,"unicode":0,"echo":false,"script":null)
 ]
}
Pause={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":80,"unicode":0,"echo":false,"script":null)
 ]
}
map={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":77,"unicode":0,"echo":false,"script":null)
 ]
}

[rendering]

quality/driver/driver_name="GLES2"
vram_compression/import_etc=true
vram_compression/import_etc2=false
environment/default_clear_color=Color( 0.0117647, 0.0745098, 0.117647, 1 )
environment/default_environment="res://default_env.tres"
